{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cat","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,YADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,6BACI,6CACA,4BAAKD,GACL,0BAAME,SAbS,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BC,QAAQC,IAAI,gBACZV,GAAc,SAAAW,GAAG,OAAKT,GAAL,mBAAmBS,OACpCR,EAAc,OASV,2BACIS,KAAK,OACLC,MAASX,EACTY,SAAa,SAAAT,GAAC,OApBJ,SAACA,GACvBF,EAAcE,EAAEU,OAAOF,OAmBOG,CAAkBX,S,uBC5B3CY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,sDAGnBT,QAAQC,IAAI,eAAeU,GAHR,SAIAE,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAU,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE3B,OACI,yBAAKc,UAAU,0BACX,yBAAKC,IAAKf,EAAKgB,IAAON,IAD1B,IAEI,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXjB,mBAAS,CAC/BwB,KAAK,GACLa,SAAQ,IAJyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAoBrC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKtB,CAACpB,IAEIqB,EDhBuBK,CAAa1B,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAInB,OACI,oCACA,4BAAKpB,GACJoB,GAAW,uBAAGJ,UAAU,qBAAb,YAEX,yBAAKA,UAAU,aAERH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEgBbkB,EAjCO,WAAM,MAGW7C,mBAAS,CAAC,cAHrB,mBAGjB8C,EAHiB,KAGN/C,EAHM,KAcxB,OACI,6BACI,8CACA,kBAAC,EAAD,CAAcA,cAAiBA,IAC/B,6BACA,4BAEQ+C,EAAWpB,KAAK,SAAAqB,GACZ,OAAO,kBAAC,EAAD,CACHH,IAAKG,EACL9B,SAAU8B,U,MCtBtCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d95b9e91.chunk.js","sourcesContent":["import React,{useState} from 'react'\n\nimport PropTypes from 'prop-types';\n//rafc\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"Busqueda\")\n    \n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n    const handleOnSubmit = (e)=>{\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            console.log(\"Submit hecho\");\n            setCategories(cat => [inputValue,...cat]);\n            setInputValue('');\n        }\n\n    }\n    return (\n        <div>\n            <h2> Add Category</h2>\n            <h3>{inputValue}</h3>\n            <form onSubmit = { handleOnSubmit}>\n                <input\n                    type=\"text\"\n                    value = {inputValue}\n                    onChange = { e => handleInputChange(e)}\n                />\n            </form>\n        </div>\n    )\n\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}","\nexport const getGifs = async (category) =>{\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=JSodZwtg6jXCrSdtkO0xogQXNo9MYD8D`\n    console.log(\"la url es : \",url);\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifItem = ({title,url}) => {\n    //console.log(id,title,url);\n    return (\n        <div className=\"card animate__fadeInUp\" >\n            <img src={url} alt = {title} />>\n            <p>{title}</p>\n        </div>\n    \n    )\n}\n","import React from 'react';\nimport {useFetchGifs} from '../hooks/useFetchGifs'\nimport {GifItem} from './GifItem'\n\nexport const GifGrid = ({category}) => {\n\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    \n    //getGift();\n    return (\n        <>\n        <h3>{category}</h3>\n        {loading && <p className=\"animate__fadeInUp\">Cargando</p> }\n            \n         <div className=\"card-grid\">\n            {\n                images.map( img =>(\n                    <GifItem \n                        key = {img.id} \n                        {...img} \n                    \n                    />\n                )\n                )\n                }\n\n        </div> \n        </>\n    )\n}\n","import { useState,useEffect } from 'react'\nimport { getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect( ()=>{\n      \n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data:imgs,\n                    loading:false\n                })\n\n                   \n                })\n    },[category]) \n\n    return state; // {data:[], loading:true}\n}","import React,{useState} from 'react'\nimport {AddCategory} from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nconst  GifExpertApp=  ()  =>{\n    \n    //const categories = ['One Punch','Samurai X','Rick y Morty'];\n    const [categories,setCategories] = useState(['One Punch']);\n    \n   /* \n    const handleAdd = (e) =>{\n        const valorNuevo = e;\n        //setCategories([...categories,e]);\n        setCategories( cat => [...categories,e])\n        console.table(categories);\n    }\n    */\n    \n    return (\n        <div>\n            <h2>Gif Expert App</h2>\n            <AddCategory  setCategories = {setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map( c =>{\n                        return <GifGrid \n                            key={c}\n                            category={c}\n                        />\n                    })\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}